<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[My Octopress Blog]]></title>
  <link href="http://ryan715.github.io/atom.xml" rel="self"/>
  <link href="http://ryan715.github.io/"/>
  <updated>2015-10-01T11:13:15+08:00</updated>
  <id>http://ryan715.github.io/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Integration ElasticSearch to Rails]]></title>
    <link href="http://ryan715.github.io/blog/2015/10/01/integration-elasticsearch-to-rails/"/>
    <updated>2015-10-01T11:01:21+08:00</updated>
    <id>http://ryan715.github.io/blog/2015/10/01/integration-elasticsearch-to-rails</id>
    <content type="html"><![CDATA[<h3>导言</h3>

<p>  这两天项目要求，把现有的搜索改成ElasticSearch(后面简称es)。之前接触 过一些es，后来就开始捣鼓。记得railcasts上面有讲过相关视频，重温了下就  开始弄，没弄多久发现上面用的<a href="https://github.com/karmi/retire">tire</a>已经retire了。为了让更多的朋友们不走冤枉路，所以才有了此文。</p>

<h3>简介</h3>

<p>  大致说下什么是es，详细的<a href="https://en.wikipedia.org/wiki/Elasticsearch">Wikipedia</a>有介绍。es其实就是一个搜索的引擎，从开源项目lucene出来，lucene是java编写的，比较复杂，要使用它必须了解核心一大堆东西。es就是包装了一层，然后提供RESTFUL API调用，从而让全文搜索变得更加简单。</p>

<h3>过程</h3>

<h5>安装</h5>

<p>  在安装es之前，先安装jdk。
  Mac环境, 运行 <code>brew install elasticsearch</code>, 然后运行<code>elasticsearch --config=/usr/local/opt/elasticsearch/config/elasticsearch.yml</code>启动，访问<a href="http://localhost:9200"> http://localhost:9200</a>，访问成功就表示安装完成了。</p>

<p>  其他环境，访问<a href="http://elasticsearch.org/download">官网</a>相关安装包下载。</p>

<h5>使用</h5>

<p>  在Gemfile中加入</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="n">gem</span> <span class="s1">&#39;elasticsearch-model&#39;</span>
</span><span class='line'> <span class="n">gem</span> <span class="s1">&#39;elasticsearch-rails&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p> 注意：es-model自带了分页插件，如果你在gemfile中有分页，如<code>will_paginate</code> 或者 <code>kaminari</code>，要把他们放到es-model和es-rails的前面。</p>

<p> 在需要添加搜索的model添加以下代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="k">class</span> <span class="nc">University</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>   <span class="kp">include</span> <span class="no">Elasticsearch</span><span class="o">::</span><span class="no">Model</span>
</span><span class='line'>   <span class="kp">include</span> <span class="no">Elasticsearch</span><span class="o">::</span><span class="no">Model</span><span class="o">::</span><span class="no">Callbacks</span>
</span><span class='line'> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p> 完成引用后，我们可以编写search方法了：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">search</span><span class="p">(</span><span class="n">search</span><span class="p">)</span>
</span><span class='line'>    <span class="n">response</span> <span class="o">=</span> <span class="n">__elasticsearch__</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="n">search</span><span class="p">)</span>
</span><span class='line'> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p> 这是一个很简单的search，通过传入的参数直接进行检索。我们可以使用DSL来使我们的检索语句更加满足我们的业务需要，以下是我需要检索一个状态为1，并且从栏目名为name的一个检索:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">search_filter</span><span class="p">(</span><span class="n">params</span><span class="p">)</span>
</span><span class='line'>  <span class="n">response</span> <span class="o">=</span> <span class="n">__elasticsearch__</span><span class="o">.</span><span class="n">search</span><span class="p">(</span>
</span><span class='line'>      <span class="s2">&quot;query&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;filtered&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="s2">&quot;filter&quot;</span><span class="p">:</span>   <span class="p">{</span>
</span><span class='line'>            <span class="s2">&quot;bool&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="s2">&quot;must&quot;</span><span class="p">:</span>     <span class="p">{</span> <span class="s2">&quot;term&quot;</span><span class="p">:</span>  <span class="p">{</span> <span class="s2">&quot;status&quot;</span><span class="p">:</span> <span class="mi">1</span> <span class="p">}},</span>
</span><span class='line'>              <span class="s2">&quot;must&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="s2">&quot;query&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                  <span class="s2">&quot;match&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s2">&quot;name&quot;</span><span class="p">:</span> <span class="n">params</span> <span class="p">}</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>关于es的DSL更多写法，大家可以访问<a href="https://www.elastic.co/guide/en/elasticsearch/guide/current/_most_important_queries_and_filters.html">这里</a>。里面详细的讲解了query,filter等一些常用查询，大家可以根据业务需要自行改装。</p>

<p> 然后我们为model创建index, 主要给es使用：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="n">mapping</span> <span class="ss">dynamic</span><span class="p">:</span> <span class="kp">false</span> <span class="k">do</span>
</span><span class='line'>   <span class="n">indexes</span> <span class="ss">:name</span>
</span><span class='line'>   <span class="n">indexes</span> <span class="ss">:tag</span>
</span><span class='line'> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p> 我们继续往下走，model是可以serialized成json的，我们使用<code>as_indexed_json</code>这个方法。我们可以这样写：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="k">def</span> <span class="nf">as_indexed_json</span><span class="p">(</span><span class="n">options</span><span class="o">=</span><span class="p">{})</span>
</span><span class='line'>   <span class="nb">self</span><span class="o">.</span><span class="n">as_json</span><span class="p">(</span>
</span><span class='line'>     <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span class="ss">:id</span><span class="p">,</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">:description</span><span class="p">,</span> <span class="ss">:status</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>     <span class="kp">include</span><span class="p">:</span> <span class="p">{</span> <span class="ss">tags</span><span class="p">:</span> <span class="p">{</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span class="ss">:name</span><span class="o">]</span><span class="p">}}</span>
</span><span class='line'>   <span class="p">)</span>
</span><span class='line'> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p> <code>include</code>的部分是处理association的，<code>only</code>是model本身的字段属性。完成了以上调整，我们的model搜索基本完成了。如果你现在使用搜索，我估计还是搜索不出数据。我们要把数据导入给es，使用这个命令</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> rake environment elasticsearch:import:model <span class="nv">CLASS</span><span class="o">=</span><span class="s1">&#39;your_model_name&#39;</span> <span class="nv">FORCE</span><span class="o">=</span>y
</span></code></pre></td></tr></table></div></figure>


<p>好啦。基本就完成。es默认自带中文分词，但是有些posts反馈说不大好用，可以使用<a href="https://github.com/medcl/elasticsearch-rtf">es-rtf</a>，集成了中文的分词插件，下载直接可以用。必须要安装jdk，里面有详尽的使用方法。</p>

<h3>相关资料</h3>

<p>gem的<a href="https://github.com/elastic/elasticsearch-rails/tree/master/elasticsearch-model">README</a>,有耐心慢慢看可以了解很多</p>

<p>一些快速的tutorial</p>

<p><a href="http://www.sitepoint.com/full-text-search-rails-elasticsearch/">http://www.sitepoint.com/full-text-search-rails-elasticsearch/</a>
<a href="http://aaronvb.com/articles/intro-to-elasticsearch-ruby-on-rails-part-1.html">http://aaronvb.com/articles/intro-to-elasticsearch-ruby-on-rails-part-1.html</a>
<a href="http://www.spacevatican.org/2012/6/3/fun-with-elasticsearch-s-children-and-nested-documents/">http://www.spacevatican.org/2012/6/3/fun-with-elasticsearch-s-children-and-nested-documents/</a></p>

<p>可以了解，railcast的es介绍 <a href="http://railscasts.com/episodes/306-elasticsearch-part-1">http://railscasts.com/episodes/306-elasticsearch-part-1</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[I am back again]]></title>
    <link href="http://ryan715.github.io/blog/2015/09/30/i-am-back-again/"/>
    <updated>2015-09-30T17:36:05+08:00</updated>
    <id>http://ryan715.github.io/blog/2015/09/30/i-am-back-again</id>
    <content type="html"><![CDATA[<p>I'am back again with more passion and creative. I will record my life and code posts in here.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dev Plan]]></title>
    <link href="http://ryan715.github.io/blog/2015/09/01/dev-plan/"/>
    <updated>2015-09-01T10:53:00+08:00</updated>
    <id>http://ryan715.github.io/blog/2015/09/01/dev-plan</id>
    <content type="html"><![CDATA[<h3>blablacar</h3>

<ul>
<li><p>Add blog features? is it nessessary?</p></li>
<li><p>public access</p></li>
</ul>


<h3>bims</h3>

<ol>
    <li>Add account UI</li>
    <li>Account CRUD</li>
    <li>Add apple developer ios certifile </li>
</ol>


<h3>my store</h3>

<p>Helping Clare building a cake online store, to learn how to extend the spree framework.Today tasks are below</p>

<ol>
<li>change logo</li>
<li>change store name</li>
<li>search a bakery bootstrap template to custome the page</li>
</ol>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mess, running]]></title>
    <link href="http://ryan715.github.io/blog/2015/07/29/mess/"/>
    <updated>2015-07-29T22:31:00+08:00</updated>
    <id>http://ryan715.github.io/blog/2015/07/29/mess</id>
    <content type="html"><![CDATA[<h3>About Mess</h3>

<p>Today devotional is about Whose mess, it descrips some mess form our spiritually sense. It teaches us that do not judge people, cause we usually ignore our sin instead other&rsquo;s sin.</p>

<h3>Running</h3>

<p>I run today, but I don&rsquo;t want to run before. I run so fast today, I think the reason is that i didnot run so long time. Feeling so good after running.</p>

<h3>Exploitting market</h3>

<p>How to exploit market? The biggest problem after your company starts business. I wrote down some key points after conclued below</p>

<ul>
<li>The product is the important thing, you must understand the selling points about products clearly.</li>
<li>Introduction your businesses to freinds or clients who worked before, telling them what they got it from products, the product how to solve their problems.</li>
<li>You need a website to present the product demo.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[subdomaininrails4]]></title>
    <link href="http://ryan715.github.io/blog/2014/11/28/subdomaininrails4/"/>
    <updated>2014-11-28T17:27:00+08:00</updated>
    <id>http://ryan715.github.io/blog/2014/11/28/subdomaininrails4</id>
    <content type="html"><![CDATA[<p>Today, i&rsquo;ll blog something about subdomain in rails4.</p>

<h1>subdomain.rb</h1>

<p>you should add sobdomain.rb</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>class
</span><span class='line'>  def 
</span><span class='line'>      
</span><span class='line'>  end
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[hello again]]></title>
    <link href="http://ryan715.github.io/blog/2014/11/28/hello-again/"/>
    <updated>2014-11-28T17:16:00+08:00</updated>
    <id>http://ryan715.github.io/blog/2014/11/28/hello-again</id>
    <content type="html"><![CDATA[<p>hello, again.
From now no, i&rsquo;ll blog again.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[some change subdomain in rails4]]></title>
    <link href="http://ryan715.github.io/blog/2014/11/28/some-change-subdomain-in-rails4/"/>
    <updated>2014-11-28T16:53:00+08:00</updated>
    <id>http://ryan715.github.io/blog/2014/11/28/some-change-subdomain-in-rails4</id>
    <content type="html"><![CDATA[<p>in rails4, when i add subdomain in libs, but it doesn&rsquo;t work. so i add subdomain in route.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[find by in rails4]]></title>
    <link href="http://ryan715.github.io/blog/2014/11/28/find-by-in-rails4/"/>
    <updated>2014-11-28T16:30:00+08:00</updated>
    <id>http://ryan715.github.io/blog/2014/11/28/find-by-in-rails4</id>
    <content type="html"><![CDATA[<p>In rails4, you should need to code like this when you need to find by *</p>

<p>Blog.find_by subdomain: request.subdomain</p>
]]></content>
  </entry>
  
</feed>
